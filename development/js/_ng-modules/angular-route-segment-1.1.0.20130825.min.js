"use strict";!function(angular){angular.module("route-segment",[]).provider("$routeSegment",["$routeProvider",function($routeProvider){var $routeSegmentProvider=this;var options=$routeSegmentProvider.options={autoLoadTemplates:false,strictMode:false};var segments=this.segments={},rootPointer=pointer(segments,null);function camelCase(name){return name.replace(/([\:\-\_]+(.))/g,function(_,separator,letter,offset){return offset?letter.toUpperCase():letter})}function pointer(segment,parent){if(!segment)throw new Error("Invalid pointer segment");var lastAddedName;return{segment:function(name,params){segment[camelCase(name)]={params:params};lastAddedName=name;return this},within:function(childName){var child;childName=childName||lastAddedName;if(child=segment[camelCase(childName)]){if(child.children==undefined)child.children={}}else{if(options.strictMode)throw new Error("Cannot get into unknown `"+childName+"` segment");else{child=segment[camelCase(childName)]={params:{},children:{}}}}return pointer(child.children,this)},up:function(){return parent},root:function(){return rootPointer}}}$routeSegmentProvider.when=function(route,name){$routeProvider.when(route,{segment:name});return this};angular.extend($routeSegmentProvider,rootPointer);this.$get=["$rootScope","$q","$http","$templateCache","$route","$routeParams","$injector",function($rootScope,$q,$http,$templateCache,$route,$routeParams,$injector){var $routeSegment={name:"",$routeParams:angular.copy($routeParams),chain:[],startsWith:function(val){var regexp=new RegExp("^"+val);return regexp.test($routeSegment.name)},contains:function(val){for(var i=0;i<this.chain.length;i++)if(this.chain[i].name==val)return true;return false}};var resolvingSemaphoreChain={};$rootScope.$on("$routeChangeSuccess",function(event,args){var route=args.$route||args.$$route;if(route&&route.segment){var segmentName=route.segment;var segmentNameChain=segmentName.split(".");var updates=[];for(var i=0;i<segmentNameChain.length;i++){var newSegment=getSegmentInChain(i,segmentNameChain);if(resolvingSemaphoreChain[i]!=newSegment.name||isDependenciesChanged(newSegment)){if($routeSegment.chain[i]&&$routeSegment.chain[i].name==newSegment.name&&!isDependenciesChanged(newSegment))resolvingSemaphoreChain[i]=newSegment.name;else updates.push(updateSegment(i,newSegment))}}$q.all(updates).then(function(result){$routeSegment.name=segmentName;$routeSegment.$routeParams=angular.copy($routeParams);for(var i=0;i<result.length;i++){if(result[i].success!=undefined)broadcast(result[i].success)}if($routeSegment.chain.length>segmentNameChain.length){var oldLength=$routeSegment.chain.length;var shortenBy=$routeSegment.chain.length-segmentNameChain.length;$routeSegment.chain.splice(-shortenBy,shortenBy);for(var i=segmentNameChain.length;i<oldLength;i++)updateSegment(i,null)}})}});function isDependenciesChanged(segment){var result=false;if(segment.params.dependencies)angular.forEach(segment.params.dependencies,function(name){if(!angular.equals($routeSegment.$routeParams[name],$routeParams[name]))result=true});return result}function updateSegment(index,segment){if($routeSegment.chain[index]&&$routeSegment.chain[index].clearWatcher){$routeSegment.chain[index].clearWatcher()}if(!segment){resolvingSemaphoreChain[index]=null;broadcast(index);return}resolvingSemaphoreChain[index]=segment.name;if(segment.params.untilResolved){return resolve(index,segment.name,segment.params.untilResolved).then(function(result){if(result.success!=undefined)broadcast(index);return resolve(index,segment.name,segment.params)})}else return resolve(index,segment.name,segment.params)}function resolve(index,name,params){var locals=angular.extend({},params.resolve);angular.forEach(locals,function(value,key){locals[key]=angular.isString(value)?$injector.get(value):$injector.invoke(value)});if(params.template)locals.$template=params.template;if(options.autoLoadTemplates&&params.templateUrl)locals.$template=$http.get(params.templateUrl,{cache:$templateCache}).then(function(response){return response.data});return $q.all(locals).then(function(resolvedLocals){if(resolvingSemaphoreChain[index]!=name)return $q.reject();$routeSegment.chain[index]={name:name,params:params,locals:resolvedLocals,reload:function(){updateSegment(index,this).then(function(result){if(result.success!=undefined)broadcast(index)})}};if(params.watcher){var getWatcherValue=function(){if(!angular.isFunction(params.watcher))throw new Error("Watcher is not a function in segment `"+name+"`");return $injector.invoke(params.watcher,{},{segment:$routeSegment.chain[index]})};var lastWatcherValue=getWatcherValue();$routeSegment.chain[index].clearWatcher=$rootScope.$watch(getWatcherValue,function(value){if(value==lastWatcherValue)return;lastWatcherValue=value;$routeSegment.chain[index].reload()})}return{success:index}},function(error){if(params.resolveFailed){var newResolve={error:function(){return $q.when(error)}};return resolve(index,name,angular.extend({resolve:newResolve},params.resolveFailed))}else throw new Error("Resolving failed with a reason `"+error+"`, but no `resolveFailed` "+"provided for segment `"+name+"`")})}function broadcast(index){$rootScope.$broadcast("routeSegmentChange",{index:index,segment:$routeSegment.chain[index]||null})}function getSegmentInChain(segmentIdx,segmentNameChain){if(!segmentNameChain)return null;if(segmentIdx>=segmentNameChain.length)return null;var curSegment=segments,nextName;for(var i=0;i<=segmentIdx;i++){nextName=segmentNameChain[i];if(curSegment[camelCase(nextName)]!=undefined)curSegment=curSegment[camelCase(nextName)];if(i<segmentIdx)curSegment=curSegment.children}return{name:nextName,params:curSegment.params}}return $routeSegment}]}])}(angular);"use strict";!function(angular){angular.module("view-segment",["route-segment"]).directive("appViewSegment",["$route","$compile","$controller","$routeParams","$routeSegment","$q","$injector",function($route,$compile,$controller,$routeParams,$routeSegment,$q,$injector){return{restrict:"ECA",priority:500,compile:function(tElement,tAttrs){var defaultContent=tElement.html(),isDefault=true,anchor=angular.element(document.createComment(" view-segment "));tElement.prepend(anchor);return function($scope){var currentScope,currentElement,currentSegment,onloadExp=tAttrs.onload||"",animate,viewSegmentIndex=parseInt(tAttrs.appViewSegment);try{var $animator=$injector.get("$animator");animate=$animator($scope,tAttrs)}catch(e){}try{animate=$injector.get("$animate")}catch(e){}if($routeSegment.chain[viewSegmentIndex])update($routeSegment.chain[viewSegmentIndex]);$scope.$on("routeSegmentChange",function(event,args){if(args.index==viewSegmentIndex&&currentSegment!=args.segment)update(args.segment)});function clearContent(){if(currentElement){animate.leave(currentElement);currentElement=null}if(currentScope){currentScope.$destroy();currentScope=null}}function update(segment){currentSegment=segment;if(isDefault){isDefault=false;tElement.replaceWith(anchor)}if(!segment){clearContent();currentElement=tElement.clone();currentElement.html(defaultContent);animate.enter(currentElement,null,anchor);$compile(currentElement,false,499)($scope);return}var locals=angular.extend({},segment.locals),template=locals&&locals.$template;if(template){clearContent();currentElement=tElement.clone();currentElement.html(template);animate.enter(currentElement,null,anchor);var link=$compile(currentElement,false,499),controller;currentScope=$scope.$new();if(segment.params.controller){locals.$scope=currentScope;controller=$controller(segment.params.controller,locals);if(segment.params.controllerAs)currentScope[segment.params.controllerAs]=controller;currentElement.data("$ngControllerController",controller);currentElement.children().data("$ngControllerController",controller)}link(currentScope);currentScope.$emit("$viewContentLoaded");currentScope.$eval(onloadExp)}else{clearContent()}}}}}}])}(angular);